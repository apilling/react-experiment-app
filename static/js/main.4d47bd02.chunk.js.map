{"version":3,"sources":["components/prompt.tsx","components/swapButton.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Prompt","text","SwapButton","change","useState","active","setActive","onClick","App","prompt","setPrompt","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAEaA,EAAS,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,KACpB,OAAO,8BAAMA,KCAJC,EAAa,SAAC,GAA6D,IAA5DC,EAA2D,EAA3DA,OACxB,EAA4BC,oBAAkB,GAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAWA,OAAO,wBAAQC,QAAS,kBAPhBJ,EADAE,EACO,eAEA,qBAEXC,GAAWD,IAGR,mBCGIG,MAZf,WACE,MAA4BJ,mBAAiB,sBAA7C,mBAAOK,EAAP,KAAeC,EAAf,KACA,OACE,qBAAKC,UAAU,MAAf,SACE,gCACI,cAAC,EAAD,CAAQV,KAAMQ,IACd,cAAC,EAAD,CAAYN,OAAQO,UCEfE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4d47bd02.chunk.js","sourcesContent":["\r\n\r\nexport const Prompt = ({text}: {text: string}): JSX.Element => {\r\n    return <div>{text}</div>\r\n}","import { useState } from \"react\";\r\n\r\n\r\nexport const SwapButton = ({change}: {change: (text: string) => void}): JSX.Element => {\r\n    const [active, setActive] = useState<boolean>(true);\r\n\r\n    const swapper = () => {\r\n        if (active) {\r\n            change(\"Old Prompt!!\");\r\n        } else {\r\n            change(\"New Prompt!!\");\r\n        }\r\n        setActive(!active)\r\n    }\r\n\r\n    return <button onClick={() => swapper()}>Swap</button>\r\n} ","import React, { useState } from 'react';\nimport './App.css';\nimport {Prompt} from './components/prompt';\nimport { SwapButton } from './components/swapButton';\n\n\nfunction App(): JSX.Element {\n  const [prompt, setPrompt] = useState<string>(\"Hello and Welcome!\");\n  return (\n    <div className=\"App\">\n      <div>\n          <Prompt text={prompt}></Prompt>\n          <SwapButton change={setPrompt}></SwapButton>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}